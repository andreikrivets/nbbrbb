{"version":3,"sources":["components/chart.jsx","components/Page.jsx","components/getCurrentRates.js","components/getCurrencyDynamics.js","components/App.jsx","index.jsx"],"names":["withHighcharts","stat","abbr","className","HighchartsChart","Chart","Tooltip","valueSuffix","XAxis","YAxis","name","data","Highcharts","Page","Cur_OfficialRate","CircularProgress","style","marginLeft","marginTop","multipler","Cur_Scale","date","Date","toDateString","display","flexDirection","alignItems","Typography","variant","color","Cur_Abbreviation","toFixed","getCurrentRates","id","a","async","url","fetch","resp","json","getCurrencyDynamics","now","from","getFullYear","getMonth","getDay","to","req","map","el","slice","App","useState","value","setValue","setStat","setData","ids","fetchData","val","dyn","useEffect","Container","maxWidth","Paper","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ee1fb22.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport {\r\n  HighchartsChart,\r\n  Chart,\r\n  withHighcharts,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  LineSeries,\r\n} from \"react-jsx-highcharts\";\r\n\r\nconst ChartSection = ({ stat, abbr }) => (\r\n  <div className=\"chart-wrapper\">\r\n    <HighchartsChart>\r\n      <Chart />\r\n      <Tooltip valueSuffix=\"BYN\" />\r\n\r\n      <XAxis />\r\n\r\n      <YAxis>\r\n        <LineSeries name={abbr} data={stat} />\r\n      </YAxis>\r\n    </HighchartsChart>\r\n  </div>\r\n);\r\n\r\nexport default withHighcharts(ChartSection, Highcharts);\r\n","import React from \"react\";\r\nimport { Typography, CircularProgress } from \"@material-ui/core\";\r\n\r\nimport ChartSection from \"./chart\";\r\n\r\nconst Page = ({ data, stat }) => {\r\n  if (!data.Cur_OfficialRate)\r\n    return <CircularProgress style={{ marginLeft: \"50%\", marginTop: \"2%\" }} />;\r\n  const multipler = data.Cur_Scale;\r\n  const date = new Date(data.Date).toDateString();\r\n\r\n  return (\r\n    <section\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        marginTop: \"2%\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" color=\"primary\">\r\n        {`${multipler} ${\r\n          data.Cur_Abbreviation\r\n        } = ${data.Cur_OfficialRate.toFixed(2)} BYN`}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">{date}</Typography>\r\n      <ChartSection stat={stat} abbr={data.Cur_Abbreviation} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","const getCurrentRates = async id => {\r\n  const url = `https://www.nbrb.by/api/exrates/rates/${id}`;\r\n  const resp = await fetch(url);\r\n  const data = await resp.json();\r\n  return data;\r\n};\r\n// 145, 292, 298\r\n\r\nexport default getCurrentRates;\r\n","const getCurrencyDynamics = async (id) => {\r\n  const date = new Date(Date.now());\r\n  const from = `${date.getFullYear()}-${date.getMonth()}-${date.getDay()}`;\r\n  const to = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDay()}`;\r\n  const url = `https://www.nbrb.by/API/ExRates/Rates/Dynamics/${id}?startDate=${from}&endDate=${to}`;\r\n  const req = await fetch(url);\r\n  const json = await req.json();\r\n  return json.map((el) => [\r\n    el.Date.slice(0, 10),\r\n    +el.Cur_OfficialRate.toFixed(3),\r\n  ]);\r\n};\r\n\r\nexport default getCurrencyDynamics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Paper, Tabs, Tab } from \"@material-ui/core\";\r\n\r\nimport Page from \"./Page\";\r\nimport getCurrentRates from \"./getCurrentRates\";\r\nimport getCurrencyDynamics from \"./getCurrencyDynamics\";\r\n\r\nconst App = () => {\r\n  const [value, setValue] = useState(0);\r\n  const [stat, setStat] = useState({});\r\n  const [data, setData] = useState({});\r\n\r\n  const ids = [145, 292, 298];\r\n\r\n  const fetchData = async (val) => {\r\n    const id = ids[val];\r\n    const req = await getCurrentRates(id);\r\n    const dyn = await getCurrencyDynamics(id);\r\n    setData(req);\r\n    setStat(dyn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(0);\r\n  }, []);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    fetchData(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Paper>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab label=\"USD\" />\r\n          <Tab label=\"EUR\" />\r\n          <Tab label=\"RUB\" />\r\n        </Tabs>\r\n        <Page data={data} stat={stat} />\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n// style={{ display: \"flex\", justifyContent: \"center\" }}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}